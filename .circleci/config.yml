version: 2.1

jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0

    steps:
      - checkout

      - run:
          name: Restore Dependencies
          command: dotnet restore

      - run:
          name: Build
          command: dotnet build $lib

  test:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0

    steps:
      - checkout

      - run:
          name: Restore Dependencies
          command: dotnet restore

      - run:
          name: Test
          command: dotnet test

  semver:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0

    steps:
      - checkout

      - run:
          name: Install GitVersion
          command: |
            dotnet tool install --global gitversion.tool
            export PATH="$PATH:/root/.dotnet/tools"

      - run:
          name: Get Version
          command: |
            SEMVER=$(dotnet-gitversion /showvariable SemVer)
            NEXTVER=$(dotnet-gitversion /showvariable MajorMinorPatch)
            echo "Current branch semver is '$SEMVER'"
            echo "Main branch candidate semver is '$NEXTVER'"

  deploy_nuget:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0

    steps:
      - checkout

      - run:
          name: Restore Dependencies
          command: dotnet restore

      - run:
          name: Install GitVersion
          command: |
            dotnet tool install --global gitversion.tool
            export PATH="$PATH:/root/.dotnet/tools"

      - run:
          name: Get Version
          command: |
            SEMVER=$(dotnet-gitversion /showvariable SemVer)
            echo "Releasing version $SEMVER"

      - run:
          name: Build and Pack
          command: |
            dotnet-gitversion /updateprojectfiles
            rm -f bin/Debug/*.nupkg
            dotnet pack
            dotnet nuget pushx bin/Debug/*.nupkg -s https://api.nuget.org/v3/index.json -k $nuget_api_key

      - run:
          name: Push Changes
          command: |
            git push -o ci.skip
            git push --tags

workflows:
  test_build_release:
    jobs:
      - test
      - build:
          requires:
            - test
      - release:
          requires:
            - test
            - build
